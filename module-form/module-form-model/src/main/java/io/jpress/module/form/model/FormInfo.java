package io.jpress.module.form.model;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.google.common.collect.Sets;
import io.jboot.db.annotation.Table;
import io.jpress.module.form.model.base.BaseFormInfo;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;

/**
 * Generated by JPress.
 */
@Table(tableName = "form_info", primaryKey = "id")
public class FormInfo extends BaseFormInfo<FormInfo> {

    private static final long serialVersionUID = 1L;


    public static final String FORMINFO_STATUS_INIT = "init";
    public static final String FORMINFO_STATUS_DEPLOYED = "deployed";

    private static final Set<String> fieldTags = Sets.newHashSet("input", "textarea", "select"
            , "range", "radio", "checkbox", "date", "time", "datetime", "switch", "file-upload");


    public List<DbFieldInfo> toDbFieldInfo() {
        String json = getBuilderJson();
        JSONArray datas = JSON.parseArray(json);
        List<DbFieldInfo> dbFieldInfos = new ArrayList<>();

        parseJsonArrayToDbFieldInfos(datas, dbFieldInfos);

        return dbFieldInfos;
    }


    public String toCreateTableSql(){
        //CREATE TABLE `form_dict_item` (
        //  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
        //  `text` text COMMENT '文本内容',
        //  `value` varchar(64) DEFAULT NULL COMMENT 'key',
        //  PRIMARY KEY (`id`)
        //) ENGINE=InnoDB AUTO_INCREMENT=43 DEFAULT CHARSET=utf8mb4;

        String tableName = "form_data_" + getId()+"_"+getVersion();


        StringBuilder sqlBuilder = new StringBuilder();
        sqlBuilder.append("CREATE TABLE `").append(tableName).append("` (");
        sqlBuilder.append("`id` int(11) unsigned NOT NULL AUTO_INCREMENT,");

        List<DbFieldInfo> dbFieldInfos = toDbFieldInfo();
        for (DbFieldInfo dbFieldInfo : dbFieldInfos) {
            sqlBuilder.append(dbFieldInfo.toSql()).append(",");
        }

        sqlBuilder.append("PRIMARY KEY (`id`)");
        sqlBuilder.append(") ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;");

        return sqlBuilder.toString();
    }




    private void parseJsonArrayToDbFieldInfos(JSONArray datas, List<DbFieldInfo> dbFieldInfos) {
        if (datas == null || datas.isEmpty()) {
            return;
        }

        for (int i = 0; i < datas.size(); i++) {
            JSONObject data = datas.getJSONObject(i);

            JSONObject children = data.getJSONObject("children");

            //容器（布局组件）
            if (children != null) {
                for (String s : children.keySet()) {
                    parseJsonArrayToDbFieldInfos(children.getJSONArray(s), dbFieldInfos);
                }
            }

            //非布局组件数据
            else if (fieldTags.contains(data.getString("tag"))) {

                String fieldName = data.getString("field");
                String fieldType = data.getString("field_type");
                Integer fieldLenth = data.getInteger("field_lenth");

                DbFieldInfo dbFieldInfo = new DbFieldInfo();
                dbFieldInfo.setName(fieldName);
                dbFieldInfo.setType(fieldType);
                dbFieldInfo.setTypeLen(fieldLenth);
                dbFieldInfo.setComment(data.getString("label"));

                dbFieldInfos.add(dbFieldInfo);
            }
        }

    }


}

